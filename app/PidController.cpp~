/************************************************************
 *                                                          *
 * Copyright (C) 2017 by Yi-ting Lei                        *
 *                                                          *
 ***********************************************************/

/**
 *   @file	main.cpp
 *   @brief  	This is the main file to run the PID controller
 *      
 *   Run the velocity controller
 *
 *   @author	Yi-ting Lei
 *   @date	2017/2/17
 */

#include <iostream>
//#include <lib.hpp>
#include <PidController.hpp>


bool PidController::setControlParam(double p, double i, double d) {
    // non-negative proportional, integral, derivate gains
    if (p < 0 || i < 0 || d < 0) {
        return false;
    }

    Kp = p;
    Ki = i;
    Kd = d;

    return true;
}


double PidController :: showCurrentVelocity(double setPoint, double curVelocity,
                                      double time) {
    if (time == 0) {
        return 0;
    }

    // Calculate error
    double error = setPoint - curVelocity;

    // Proportional term
    double Pout = Kp * error;

    // Integral term
    preIntegral += error * time;
    double Iout = Ki * preIntegral;

    // Derivative term
    double derivative = (error - preError) / time;
    double Dout = Kd * derivative;

    // Calculate total output
    double output = Pout + Iout + Dout;

    // Save error to previous error
    preError = error;

    return output;
}
